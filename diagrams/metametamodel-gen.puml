@startuml

' qualified name: "lioncore"


class Concept extends FeaturesContainer {
  abstract: boolean
}

class ConceptInterface extends FeaturesContainer

class Containment extends Link

abstract class Datatype extends MetamodelElement

class Enumeration extends Datatype implements NamespaceProvider

abstract class Feature extends NamespacedEntity {
  optional: boolean
  derived: boolean
}

abstract class FeaturesContainer extends MetamodelElement implements NamespaceProvider {
  allFeatures(): List<Feature>
}

' primitive type: "JSON"

abstract class Link extends Feature {
  multiple: boolean
}

class Metamodel implements NamespaceProvider {
  qualifiedName: String
}

abstract class MetamodelElement extends NamespacedEntity

interface NamespaceProvider {
  namespaceQualifier(): String
}

abstract class NamespacedEntity {
  simpleName: String
  qualifiedName(): String
}

class PrimitiveType extends Datatype

class Property extends Feature

class Reference extends Link

' primitive type: "String"

class Typedef extends Datatype

' primitive type: "boolean"

' primitive type: "int"



' relations:

Concept "*" -- "0..1" Concept: extends
Concept "*" -- "*" ConceptInterface: implements

ConceptInterface "*" -- "*" ConceptInterface: extends

Containment "*" -- "0..1" Containment: specializes

Enumeration "1" o-- "*" EnumerationLiteral: literals

FeaturesContainer "1" o-- "*" Feature: features

Link "*" -- "1" FeaturesContainer: type

Metamodel "1" o-- "*" MetamodelElement: elements
Metamodel "*" -- "*" Metamodel: dependsOn

NamespacedEntity "*" -- "1" NamespaceProvider: container

Property "*" -- "1" Datatype: type

Reference "*" -- "0..1" Reference: specializes

Typedef "*" -- "1" PrimitiveType: constraints


@enduml
